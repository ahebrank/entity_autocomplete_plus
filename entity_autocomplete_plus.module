<?php

/**
 * @file
 * Contains entity_autocomplete_plus.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Field\WidgetInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;

/**
 * Implements hook_help().
 */
function entity_autocomplete_plus_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the entity_autocomplete_plus module.
    case 'help.page.entity_autocomplete_plus':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Let the entity autocomplete matcher provide additional information to the user') . '</p>';
      return $output;

    default:
  }
}

function entity_autocomplete_plus_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, $form, FormStateInterface $form_state) {
  $element = [];
  $type = $field_definition->getType();
  $settings = $plugin->getThirdPartySettings('entity_autocomplete_plus');
  $plugin_id = $plugin->getPluginId();

  if ($type == 'entity_reference') {
    // autocomplete or IEF
    if ($plugin_id == 'entity_reference_autocomplete' || strpos($plugin_id, 'inline_entity_form') === 0) {
      $token_entity_mapper = \Drupal::service('token.entity_mapper');
      $mapped_entity = $token_entity_mapper->getTokenTypeForEntityType($entity->getEntityTypeId());
      $token_tree = [
        '#theme' => 'token_tree_link',
        '#token_types' => [$mapped_entity],
        'global_types' => FALSE,
      ];
      $rendered_token_tree = \Drupal::service('renderer')->render($token_tree);
      $form['token_string'] = array(
        '#type' => 'textfield',
        '#title' => t('Append token string to autocomplete'),
        '#default_value' => $settings['token_string'] ? $settings['token_string'] : '',
        '#size' => 60,
        '#maxlength' => 60,
        '#description' => t("Token string to include in entity reference matcher. @browse_link", [
          '@browse_link' => $rendered_token_tree,
        ]),
      );
    }
  }
}